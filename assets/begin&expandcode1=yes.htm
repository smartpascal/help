<!-- (0064)Begin&ExpandCode1=Yes -->
<html oncontextmenu="return false">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Smart Pascal : Begin command</title>
<meta name="Description" content="">
<meta name="Keywords" content="Delphi, Delphi Programming, Basics, Keyword, Command, Begin, RTL ">

<link rel="stylesheet" type="text/css" href="css/delphi.css" />

</head>
<body bgcolor="#FFFFFF">
<table width="984" cellpadding="0" cellspacing="0" border="0" align="center">
<tr>
<td>
<table width="100%" cellpadding="5" cellspacing="0" border="0" align="center"><tr>
<td>
<b><a href="index.htm"><font color="#A00000" size="6">Smart</font></a><font color="#000000" size="2"><a href="index.htm">Pascal</a></font></b>
</tr>

<tr height="50" valign="top" bgcolor="#DDDDDD">

<td><font color="#0000A0" face="Courier New" size="5"><b>Begin</b><br><font face="Arial,Helvetica,Sans-Serif" size="1">Keyword</font></font></td>

<td align="center"><font color="#444444" face="Courier New" size="4">Keyword that starts a statement block</font></td>

</tr>
</table>
</td>
</tr>
<tr>
<td>
<table width="100%" border="0" cellpadding="5" cellspacing="0" align="center" bgcolor="#F8F8F8">
<tr valign="top">

<td><font face="Courier New" size="2">&nbsp;
<b>begin</b><br>&nbsp;
&nbsp;&nbsp;Statements<br>&nbsp;
<b>end</b>
</font></td>

</tr>

</table>
</td>
</tr>
<tr height="10"><td></td></tr>
</table>
<table width="984" border="0" cellspacing="0" cellpadding="0" align="center">
<tr valign="top">
<td width="380">
<table border="0" cellpadding="7" cellspacing="0">
<tr height="30"><td class="title" bgcolor="#FEF5B5"><b>Description</b></td></tr>
<tr bgcolor="#FFFEEB"><td>
The <font color=#996600><b>Begin</b></font> keyword is fundamental to Delphi - it starts statement blocks.
<br>&nbsp;<br>
The <font color=#996600><b>Begin</b></font>-<b>end</b> pair fence in a set of statements. You may place such a block anywhere in your code.
<br>&nbsp;<br>
It is particularly sensible in <b>if</b> and <b>for</b> statements, <be>even if</b> only one statement is required. It means that adding an additional statement in the future is easy.
<br>&nbsp;<br>
For example :
<br>&nbsp;<br>
<font color=#200080><font class=mono>if a = 7 then do<br>
&nbsp;&nbsp;Inc(b, a);</font></font>
<br>&nbsp;<br>
Is better written :
<br>&nbsp;<br>
<font color=#200080><font class=mono>if a = 7 then do<br>
begin<br>
&nbsp;&nbsp;Inc(b, a);<br>
end;</font></font>
<br>&nbsp;<br>
for <b>maintenance</b> purposes.
</td></tr>

<tr height="10"><td></td></tr>
<tr height="30" bgcolor="#DADAF0"><td class="h2"><b>Related commands</b></td></tr>
<tr bgcolor="#F9F9FF"><td>
<table cellpadding="0" cellspacing="0">

<tr valign="top">
<td><b><a href="end.htm">End</a></b></td>
<td width="8"></td>
<td align="left">Keyword that terminates statement blocks</td>
</tr>

<tr valign="top">
<td><b><a href="for.htm">For</a></b></td>
<td width="8"></td>
<td align="left">Starts a loop that executes a finite number of times</td>
</tr>

<tr valign="top">
<td><b><a href="function.htm">Function</a></b></td>
<td width="8"></td>
<td align="left">Defines a subroutine that returns a value</td>
</tr>

<tr valign="top">
<td><b><a href="procedure.htm">Procedure</a></b></td>
<td width="8"></td>
<td align="left">Defines a subroutine that does not return a value</td>
</tr>

<tr valign="top">
<td><b><a href="repeat.htm">Repeat</a></b></td>
<td width="8"></td>
<td align="left">Repeat statements until a ternmination condition is met</td>
</tr>

<tr valign="top">
<td><b><a href="while.htm">While</a></b></td>
<td width="8"></td>
<td align="left">Repeat statements whilst a continuation condition is met</td>
</tr>

</table>
</td>
</tr>

</table>
</td>
<td width="8">&nbsp;</td>

<td width="690">
<table width="100%" border="0" cellpadding="6" cellspacing="0">
<tr height="30"><td class="h1" bgcolor="#BCF6BB"><a name="Ex1"></a><b>Example code : Some examples of the begin statement</b></tr>
<tr bgcolor="#FAFAFA"><td><font face="Courier New" size="2">
<font color=#008000>// Full Unit code.<br>// -----------------------------------------------------------<br>// You must store this code in a unit called <b>Unit1</b> with a form<br>// called <b>Form1</b> that has an <b>OnCreate</b> event called <b>FormCreate</b>.<br></font>&nbsp;<br><font color=#808080><b>unit Unit1;<br>&nbsp;<br>interface<br>&nbsp;<br>uses<br></b>&nbsp;&nbsp;SysUtils,<br>&nbsp;&nbsp;Forms, Dialogs;<br>&nbsp;<br><b>type<br></b>&nbsp;&nbsp;TForm1 = class(TForm)<br>&nbsp;&nbsp;&nbsp;&nbsp;procedure FormCreate(Sender: TObject);<br>&nbsp;&nbsp;<b>end;<br>&nbsp;<br>var<br>&nbsp;&nbsp;</b>Form1: TForm1;<br>&nbsp;<br><b>implementation<br><font color=#008800>{$R *.dfm}  // Include form definitions</font><br>&nbsp;<br>procedure TForm1.FormCreate(Sender: TObject);</b></font><br><b> var</b><br>
&nbsp;&nbsp;myChars : array[1..2] of char;<br>
&nbsp;&nbsp;myBytes : array[1..2] of Byte;<br>
&nbsp;&nbsp;i : Integer;<br><b>
</b><br><font color=#008000><b>// The begin statement always starts the code part of a subroutine</b></font><br><b>
<font color=#C00000><b>Begin</b></font></b><br>&nbsp;&nbsp;<font color=#008000><b>// Use a for block to assign to both arrays</b></font><br>
&nbsp;&nbsp;for i := 1 to 2 do<br>
&nbsp;&nbsp;<font color=#C00000><b>Begin</b></font><br>
&nbsp;&nbsp;&nbsp;&nbsp;myChars[i] := Chr(i+64);<br>
&nbsp;&nbsp;&nbsp;&nbsp;myBytes[i] := i+64;<br>
&nbsp;&nbsp;end;<br><b>
</b><br>&nbsp;&nbsp;<font color=#008000><b>// Use a for block to observe the contents</b></font><br>
&nbsp;&nbsp;for i := 1 to 2 do<br>
&nbsp;&nbsp;<font color=#C00000><b>Begin</b></font><br>
&nbsp;&nbsp;&nbsp;&nbsp;ShowMessage('myChars['+IntToStr(i)+'] = '+myChars[i]);<br>
&nbsp;&nbsp;&nbsp;&nbsp;ShowMessage('myBytes['+IntToStr(i)+'] = '+IntToStr(myBytes[i]));<br>
&nbsp;&nbsp;end;<br><b>
end;</b><br><font color=#808080>&nbsp;<br><b>end.</b></font>
</font></td></tr>
<tr bgcolor="#D2ECCF">
 
<td align="right"><a href="begin.htm#Ex1"><font face="Arial,Helvetica,Sans-Serif" size="1">Hide full unit code</font></a></td>

</tr>
<tr bgcolor="#D2ECCF"><td><font face="Courier New" size="2">
&nbsp;&nbsp;&nbsp;myChars[1] = A<br>&nbsp;&nbsp;
myBytes[1] = 65<br>&nbsp;&nbsp;
myChars[2] = B<br>&nbsp;&nbsp;
myChars[2] = 66<br>
&nbsp;
</font></td></tr>

</table>
</td>

</tr>
<tr height="10"><td>&nbsp;</td></tr>
</table>

</html>
