<!DOCTYPE html>
<html>
<head>
<title></title>
<meta name=viewport content="width=device-width, initial-scale=1">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />   
<link type="text/css" href="css/styles.css" rel="stylesheet" />
<link type="text/css" href="css/custom.css" rel="stylesheet" />
<link rel="stylesheet" title="Default" href="css/default.css"> 
<script type="text/javascript" src="js/jquery.js"></script>
<script src="js/highlight.min.js"></script>
<script src="js/delphi.min.js"></script>
<script src="js/javascript.min.js"></script>   
<script type="text/javascript">
hljs.tabReplace='    ';hljs.initHighlightingOnLoad();function showme(id){var divid=document.getElementById(id);if(divid.style.display=='block')divid.style.display='none';else divid.style.display='block';}
$(document).ready(function(){$("button").click(function(){$(this).text($(this).text()=='Show JS code'?'Hide JS code':'Show JS code');showme('widget');});});
</script>   
<style> 
html, body { margin:0; padding:0; background: #ffffff;} 
#idheader {width:100%; height:auto; padding: 0; margin: 0;position: fixed;top: 0;
z-index: 2;} 
#idheader table { background: #2C5D88; min-height: 59px }             
#idheader h1 { color: #FFF }     
#idnav {text-align: right; width: 158px; vertical-align: middle;} 
#idnav a { text-decoration: none }
#idnav span {display: inline-block;width: 24px;height: 24px;margin-left: 4px;
background:url('css/img/hm_webhelp_buttons_grey.png') top left no-repeat;} 
#idnav a span {background-image:url('css/img/hm_webhelp_buttons_white.png');} 
#idnav a span:hover {background-image:url('css/img/hm_webhelp_buttons_orange.png');} 
#idnav span.hmbtnprev { background-position: 0 -32px }
#idnav span.hmbtnnext { background-position: -24px -32px }
#idnav span.hmbtntop  { background-position: -48px -32px }
.language-css {background-color: #cd6a51;content: attr(rel);color: white;position: absolute;
width: 100%;background: #e18728;font-family: 'PT Serif', serif;padding: 5px 0;text-indent: 15px;font-size: 17px;font-weight: 300;line-height: 1.45;font-weight: 700;}
#checkoutbutton {
    background-color: #2C5D88;
  -moz-border-radius: 15px;
  -webkit-border-radius: 15px;
  color: #FFFFFF;
  border: 5px solid #e18728;
  padding: 2px;
  margin: 0px 0px 0px 25px;
}
#checkoutbutton:hover {opacity: 0.6; }
</style>
</head>
<body>
<div id="idheader">
<div id="idheaderbg">
<table style="width:100%;border:none;margin:0px;" cellspacing="0" cellpadding="0"> 
  <tr>
    <td class="topichead" style="text-align:left;">
      <h1 class="p_Heading1" style="page-break-after: avoid;"><span class="f_Heading1">Array Dyn of Records</span></h1>
    </td>
    <td class="topichead" id="idnav">
      <a href="hm_pas2js121.htm"><span class="hmbtnprev"></span></a>
      <a href="index.htm" title="Parent Chapter"><span class="hmbtntop"></span></a>
      <a href="hm_pas2js123.htm"><span class="hmbtnnext"></span></a>
     </td>  
  </tr>  
</table>
</div>
</div>  

<br/><br/>
<table style="width:100%;border:none;margin:10px;" cellspacing="0" cellpadding="0">
  <tr>
	<td>
	Dynamic Array of Records
	</td>
  </tr>
</table>
	
<pre><span id="code" class="language-css">Smart pascal source code</span><br>
<code class="delphi" style="background-color: #FFFEEB;">
type
  TMyRec = record
    V: Integer;
    N: String;
  end;

type
  TMyRecs = array of TMyRec;

procedure WriteLnRecs(recs: TMyRecs);
var
  i: Integer;
begin
  WriteLn(recs.Length());
  for i := recs.Low() to recs.High() do
    WriteLn(IntToStr(recs[i].V) + ': ' + recs[i].N);
end;

procedure AddRec(recs: array of TMyRec; V: Integer; N: String);
var
  k: Integer;
begin
  k := recs.Length;
  recs.SetLength(k + 1);
  recs[k].V := V;
  recs[k].N := N;
end;

{ main.pas }

Begin
  var recs := new TMyRec[0];

  WriteLnRecs(recs);
  AddRec(recs, 2, 'one');
  WriteLnRecs(recs);

  AddRec(recs, 2, 'two');
  recs.SetLength(3);
  WriteLnRecs(recs);

  recs.SetLength(1);
  WriteLnRecs(recs);

  const
    cRec: TMyRec = (V: 123; N: 'bye');

  recs[0] := cRec;
  recs[0].N := 'BYE';
  recs.Add(cRec);

  WriteLnRecs(recs);
  recs.Delete(0);
  WriteLnRecs(recs);

  { <<< CONSOLE OUTPUTS >>>
    0
    1
    2: one
    3
    2: one
    2: two
    0:
    1
    2: one
    2
    123: BYE
    123: bye
    1
    123: bye
  }
end;

</code></pre>
<button type="button" id="checkoutbutton">Show JS code</button>
<div id="widget" style="display:none;">
<pre>
<code class="javascript">
function $ArraySetLenC(a, n, d) {
	var o = a.length;
	if (o == n) return;
	if (o > n) a.length = n;
	else
		for (; o < n; o++)
			a.push(d());
}

      var recs = [];
      recs = [];
      WriteLnRecs(recs);
      AddRec(recs,2,"one");
      WriteLnRecs(recs);
      AddRec(recs,2,"two");
      $ArraySetLenC(recs,3,function (){return {V:0,N:""}});
      WriteLnRecs(recs);
      $ArraySetLenC(recs,1,function (){return {V:0,N:""}});
      WriteLnRecs(recs);
      recs[0]={V:123,N:"bye"};
      recs[0].N = "BYE";
      recs.push(Clone$TMyRec({V:123,N:"bye"}));
      WriteLnRecs(recs);
      recs.shift();
      WriteLnRecs(recs);

function AddRec(recs$1, V$1, N$1) {
   var k = 0;
   k = recs$1.length;
   $ArraySetLenC(recs$1,(k+1),function (){return {V:0,N:""}});
   recs$1[k].V = V$1;
   recs$1[k].N = N$1;
};
function WriteLnRecs(recs$2) {
   var i = 0;
   WriteLn(recs$2.length);
   var $temp1;
   for(i=0,$temp1=recs$2.length;i<$temp1;i++) {
      WriteLn(((recs$2[i].V).toString()+": "+recs$2[i].N));
   }
};
/// TMyRec = record
///  [line: 35, column: 3, file: uMain]
function Copy$TMyRec(s,d) {
   d.V=s.V;
   d.N=s.N;
   return d;
}
function Clone$TMyRec($) {
   return {
      V:$.V,
      N:$.N
   }
}
	  

</code></pre></div>
</div>
</body>
</html>
