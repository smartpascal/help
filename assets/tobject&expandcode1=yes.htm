<!-- (0066)TObject&ExpandCode1=Yes -->
<html oncontextmenu="return false">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Smart Pascal : TObject command</title>
<meta name="Description" content="">
<meta name="Keywords" content="Delphi, Delphi Programming, Basics, Keyword, Command, TObject, RTL ">

<link rel="stylesheet" type="text/css" href="css/delphi.css" />

</head>
<body bgcolor="#FFFFFF">
<table width="984" cellpadding="0" cellspacing="0" border="0" align="center">
<tr>
<td>
<table width="100%" cellpadding="5" cellspacing="0" border="0" align="center"><tr>
<td>
<b><a href="index.htm"><font color="#A00000" size="6">Smart</font></a><font color="#000000" size="2"><a href="index.htm">Pascal</a></font></b>
</tr>

<tr height="50" valign="top" bgcolor="#DDDDDD">

<td><font color="#0000A0" face="Courier New" size="5"><b>TObject</b><br><font face="Arial,Helvetica,Sans-Serif" size="1">Type</font></font></td>

<td align="center"><font color="#444444" face="Courier New" size="4">The base class type that is ancestor to all other classes</font></td>

<td align="right"><font color="#000000" face="Arial,Helvetica,Sans-Serif" size="3"><b>System</b> unit</font></td>

</tr>
</table>
</td>
</tr>
<tr>
<td>
<table width="100%" border="0" cellpadding="5" cellspacing="0" align="center" bgcolor="#F8F8F8">
<tr valign="top">

<td><font face="Courier New" size="2">&nbsp;
type <b>TObject</b> = class<br>&nbsp;
&nbsp;&nbsp;constructor Create;<br>&nbsp;
&nbsp;&nbsp;...<br>&nbsp;
&nbsp;&nbsp;...<br>&nbsp;
&nbsp;&nbsp;destructor Destroy; virtual;<br>&nbsp;
end;
</font></td>

</tr>

</table>
</td>
</tr>
<tr height="10"><td></td></tr>
</table>
<table width="984" border="0" cellspacing="0" cellpadding="0" align="center">
<tr valign="top">
<td width="380">
<table border="0" cellpadding="7" cellspacing="0">
<tr height="30"><td class="title" bgcolor="#FEF5B5"><b>Description</b></td></tr>
<tr bgcolor="#FFFEEB"><td>
The <font color=#996600><b>TObject</b></font> type defines the base class type. It is the oldest grandparent of all classes - every class is ultimately derived from <font color=#996600><b>TObject</b></font>.
<br>&nbsp;<br>
Because of this, every object inherits the methods of TObject.
<br>&nbsp;<br>
The <font color=#996600><b>TObject</b></font> methods fall into two categories - class and non-class. When prefixed by the keyword <b>Class</b>, a method may be called in both an object of the class, <b>and</b> in the class itself. Such a static method cannot access any class fields because a class has no data itself - only instantiated classes - objects - have data.
<br>&nbsp;<br>
Some key Class (static) methods:
<br>&nbsp;<br>
<table><tr><td class=dt align='right'><b>function ClassName&nbsp;</b></td><td class=dd> Gives the class name as a string</td></tr>
<tr><td class=dt align='right'><b>ClassParent&nbsp;</b></td><td class=dd> Gives the class parent name</td></tr>
<tr><td class=dt align='right'><b>ClassInfo&nbsp;</b></td><td class=dd> Gives class Run Time info</td></tr>
<tr><td class=dt align='right'><b>InstanceSize&nbsp;</b></td><td class=dd> Size of class object in bytes</td></tr>
<tr><td class=dt align='right'><b>NewInstance&nbsp;</b></td><td class=dd> Creates a new class object</td></tr></table>
<br>&nbsp;<br>
Some key Object methods:
<br>&nbsp;<br>
<table><tr><td class=dt align='right'><b>Create&nbsp;</b></td><td class=dd> Empty object creator</td></tr>
<tr><td class=dt align='right'><b>Free&nbsp;</b></td><td class=dd> Calls Destroy for a non-nil object ref</td></tr>
<tr><td class=dt align='right'><b>Destroy&nbsp;</b></td><td class=dd> Releases object storage</td></tr>
<tr><td class=dt align='right'><b>AfterConstruction&nbsp;</b></td><td class=dd> Called after construction</td></tr>
<tr><td class=dt align='right'><b>BeforeDestruction&nbsp;</b></td><td class=dd> Called before destruction</td></tr></table>
</td></tr>

<tr height="10"><td></td></tr>
<tr height="30" bgcolor="#DADAF0"><td class="h2"><b>Related commands</b></td></tr>
<tr bgcolor="#F9F9FF"><td>
<table cellpadding="0" cellspacing="0">

<tr valign="top">
<td><b><a href="class.htm">Class</a></b></td>
<td width="8"></td>
<td align="left">Starts the declaration of a type of object class</td>
</tr>

<tr valign="top">
<td><b><a href="printer.htm">Printer</a></b></td>
<td width="8"></td>
<td align="left">Returns a reference to the global <b>Printer</b> object</td>
</tr>

</table>
</td>
</tr>

</table>
</td>
<td width="8">&nbsp;</td>

<td width="690">
<table width="100%" border="0" cellpadding="6" cellspacing="0">
<tr height="30"><td class="h1" bgcolor="#BCF6BB"><a name="Ex1"></a><b>Example code : Using TObject methods inherited in a TForm subclass</b></tr>
<tr bgcolor="#FAFAFA"><td><font face="Courier New" size="2">
<font color=#008000>// Full Unit code.<br>// -----------------------------------------------------------<br>// You must store this code in a unit called <b>Unit1</b> with a form<br>// called <b>Form1</b> that has an <b>OnCreate</b> event called <b>FormCreate</b>.<br></font>&nbsp;<br><font color=#808080><b>unit Unit1;<br>&nbsp;<br>interface<br>&nbsp;<br>uses<br></b>&nbsp;&nbsp;<font color=#008000>// The System unit does not need to be defined</font><br>&nbsp;&nbsp;SysUtils,<br>&nbsp;&nbsp;Forms, Dialogs;<br>&nbsp;<br><b>type<br></b>&nbsp;&nbsp;TForm1 = class(TForm)<br>&nbsp;&nbsp;&nbsp;&nbsp;procedure FormCreate(Sender: TObject);<br>&nbsp;&nbsp;<b>end;<br>&nbsp;<br>var<br>&nbsp;&nbsp;</b>Form1: TForm1;<br>&nbsp;<br><b>implementation<br><font color=#008800>{$R *.dfm}  // Include form definitions</font><br>&nbsp;<br>procedure TForm1.FormCreate(Sender: TObject);</b></font><br><b> begin</b><br>&nbsp;&nbsp;<font color=#008000><b>// The unit form was derived from TObject.</b></font><br>&nbsp;&nbsp;<font color=#008000><b>// So we can use methods of TObject:</b></font><br>
&nbsp;&nbsp;ShowMessage('Form1 object class name = '+<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Form1.ClassName);<br>
&nbsp;&nbsp;ShowMessage('Form1 object class parent name = '+<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Form1.ClassParent.ClassName);<br>
&nbsp;&nbsp;ShowMessage('Form1 object instance size = '+<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IntToStr(Form1.InstanceSize));<br><b>
</b><br>&nbsp;&nbsp;<font color=#008000><b>// And now on TObject itself</b></font><br>
&nbsp;&nbsp;ShowMessage('TObject class name = '+<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=#C00000><b>TObject</b></font>.ClassName);<br>
&nbsp;&nbsp;ShowMessage('TObject instance size = '+<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IntToStr(<font color=#C00000><b>TObject</b></font>.InstanceSize));<br><b>
end;</b><br><font color=#808080>&nbsp;<br><b>end.</b></font>
</font></td></tr>
<tr bgcolor="#D2ECCF">
 
<td align="right"><a href="tobject.htm#Ex1"><font face="Arial,Helvetica,Sans-Serif" size="1">Hide full unit code</font></a></td>

</tr>
<tr bgcolor="#D2ECCF"><td><font face="Courier New" size="2">
&nbsp;&nbsp;&nbsp;Form1 object class name = TForm1<br>&nbsp;&nbsp;
Form1 object parent class name = TForm<br>&nbsp;&nbsp;
Form1 object instance size = 764<br>&nbsp;&nbsp;
TObject class name = TObject<br>&nbsp;&nbsp;
TObject instance size = 4<br>
&nbsp;
</font></td></tr>

</table>
</td>

</tr>
<tr height="10"><td>&nbsp;</td></tr>
</table>

</html>
