<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html oncontextmenu="return false">
<head>
   <title>Overview</title>
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="styles.css" rel="stylesheet" />

<script type="text/javascript" src="js/toc.js"></script>
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;">
<div id="hmpopupDiv" style="visibility:hidden; position:absolute; z-index:1000; filter:progid:DXImageTransform.Microsoft.DropShadow(color='b0b0b0', Direction=135, OffX='3', OffY='3') progid:DXImageTransform.Microsoft.Fade(Overlap=1.00);"></div>


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#C0C0C0">
  <tr valign="middle">
    <td align="left">
      <p class="p_Heading1"><span class="f_Heading1" style="font-family: 'Times New Roman'; font-weight: bold; color: #ffffff;">Smart Mobile Studio overview</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="index.htm">Top</a>&nbsp;
     <a href="hm_keywords.htm">Previous</a>&nbsp;
     <a href="hm_ide.htm">Next</a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table cellspacing="0" cellpadding="0" border="0" style="border: none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td valign="top" width="57" style="width:57px;"><p><img src="smsgraphics2013.png" width="50" height="50" border="0" alt="SMSGraphics2013"></p>
</td>
<td valign="top" width="729" style="width:729px;"><p style="text-align: justify;"><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">Smart Mobile Studio</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> is an exciting new development studio for web and pascal programmers. It’s key feature is that it completely </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-style: italic; color: #000000;">replaces</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> javascript with object pascal. Our advanced compiler technology takes your object pascal source code and transforms it into state of the art, cutting edge javascript which can be executed by all modern browsers. </span><span class="f_ImageCaption" style="font-size: 16px; font-family: 'Times New Roman'; font-style: normal; color: #000000;">The programming language used in the SmartMS is a dialect of Object Pascal which is derived from </span><span class="f_ImageCaption" style="font-size: 16px; font-family: 'Times New Roman'; font-style: normal; font-weight: bold; color: #000000;"><a href="hm_publishing_3_8.htm
">DWScript</a></span><span class="f_ImageCaption" style="font-size: 16px; font-family: 'Times New Roman'; font-style: normal; color: #000000;"> called Smart Pascal. </span></p>
</td>
</tr>
</table>
</div>
<p>&nbsp;</p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">As the name implies Smart Mobile Studio is the first and foremost a tool for building feature rich mobile applications (iPhone, iPad and Android devices). But due to the architecture of the </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">VJL</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> - </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">visual component library</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> it is equally suited for desktop browser apps. In fact some of the games that have already been created with smart run flawlessly on the desktop and can be enjoyed in browsers like Google Chrome, Mozilla FireFox and Apple Safari. Browsers that offer hardware accelerated graphics, 2d and 3d transformations, memory allocation and local storage.</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 13px;">&nbsp;</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #800000;">Anatomy of a Smart Mobile Studio Unit</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 13px;">&nbsp;</span></p>
<p class="p_CodeExample" style="border-color: #000000; border-style: solid; border-width: 1px; background: #ffcc99;"><span class="f_CodeExample" style="font-weight: bold; color: #000000;">unit</span><span class="f_CodeExample" style="color: #000000;">&nbsp;Form1;</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #000000;">interface</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #000000;">&nbsp;</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #000000;">uses</span><span class="f_CodeExample" style="color: #000000;">&nbsp;</span><br>
<span class="f_CodeExample" style="color: #000080;">&nbsp;&nbsp;SmartCL.System,&nbsp;SmartCL.Graphics,&nbsp;SmartCL.Components,&nbsp;SmartCL.Forms,</span><br>
<span class="f_CodeExample" style="color: #000080;">&nbsp;&nbsp;SmartCL.Fonts,&nbsp;SmartCL.Borders,&nbsp;SmartCL.Application,&nbsp;SmartCL.Controls.Button;</span><br>
<span class="f_CodeExample" style="color: #000080;">&nbsp;</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">type</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000080;">TForm1</span><span class="f_CodeExample" style="color: #000000;">&nbsp;=&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000000;">class</span><span class="f_CodeExample" style="color: #000000;">(</span><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">TW3Form</span><span class="f_CodeExample" style="color: #000000;">)</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000000;">procedure</span><span class="f_CodeExample" style="color: #000000;">&nbsp;W3Button1Click(Sender:&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000000;">TObject</span><span class="f_CodeExample" style="color: #000000;">);</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000000;">private</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="color: #ff0000;">&nbsp;</span><span class="f_CodeExample" style="font-style: italic; color: #ff0000;">{$I&nbsp;'Form1:intf'}</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000000;">protected</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000000;">procedure</span><span class="f_CodeExample" style="color: #000000;">&nbsp;InitializeForm;&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000000;">override</span><span class="f_CodeExample" style="color: #000000;">;</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000000;">procedure</span><span class="f_CodeExample" style="color: #000000;">&nbsp;InitializeObject;&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000000;">override</span><span class="f_CodeExample" style="color: #000000;">;</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000000;">procedure</span><span class="f_CodeExample" style="color: #000000;">&nbsp;Resize;&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000000;">override</span><span class="f_CodeExample" style="color: #000000;">;</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">end</span><span class="f_CodeExample" style="color: #000000;">;</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #000000;">implementation</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #000000;">&nbsp;</span><br>
<span class="f_CodeExample" style="font-style: italic; color: #0000ff;">{&nbsp;TForm1&nbsp;}</span><br>
<span class="f_CodeExample" style="font-style: italic; color: #0000ff;">&nbsp;</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #000000;">procedure</span><span class="f_CodeExample" style="color: #000000;">&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000080;">TForm1</span><span class="f_CodeExample" style="color: #000000;">.W3Button1Click(Sender:&nbsp;TObject);</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">begin</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000000;">writeln</span><span class="f_CodeExample" style="color: #000000;">(</span><span class="f_CodeExample" style="color: #0000ff;">'Hello'#13#$0D'World'</span><span class="f_CodeExample" style="color: #000000;">);</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000000;">writeln</span><span class="f_CodeExample" style="color: #000000;">(</span><span class="f_CodeExample" style="color: #0000ff;">&quot;Hello</span><br>
<span class="f_CodeExample" style="color: #0000ff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;World&quot;</span><span class="f_CodeExample" style="color: #000000;">);</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000000;">writeln</span><span class="f_CodeExample" style="color: #000000;">(</span><span class="f_CodeExample" style="color: #0000ff;">#&quot;</span><br>
<span class="f_CodeExample" style="color: #0000ff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hello</span><br>
<span class="f_CodeExample" style="color: #0000ff;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;World&quot;</span><span class="f_CodeExample" style="color: #000000;">);</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">end</span><span class="f_CodeExample" style="color: #000000;">;</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #000000;">procedure</span><span class="f_CodeExample" style="color: #000000;">&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000080;">TForm1</span><span class="f_CodeExample" style="color: #000000;">.InitializeForm;</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">begin</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000000;">inherited</span><span class="f_CodeExample" style="color: #000000;">;</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;&nbsp;</span><span class="f_CodeExample" style="font-style: italic; color: #008000;">//&nbsp;this&nbsp;is&nbsp;a&nbsp;good&nbsp;place&nbsp;to&nbsp;initialize&nbsp;components</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">end</span><span class="f_CodeExample" style="color: #000000;">;</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #000000;">procedure</span><span class="f_CodeExample" style="color: #000000;">&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000080;">TForm1</span><span class="f_CodeExample" style="color: #000000;">.InitializeObject;</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">begin</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">inherited</span><span class="f_CodeExample" style="color: #000000;">;</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;&nbsp;</span><span class="f_CodeExample" style="font-style: italic; color: #ff0000;">{$I&nbsp;'Form1:impl'}</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">end</span><span class="f_CodeExample" style="color: #000000;">;</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #000000;">procedure</span><span class="f_CodeExample" style="color: #000000;">&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000080;">TForm1</span><span class="f_CodeExample" style="color: #000000;">.Resize;</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">begin</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000000;">inherited</span><span class="f_CodeExample" style="color: #000000;">;</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">end</span><span class="f_CodeExample" style="color: #000000;">;</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #000000;">initialization</span><br>
<span class="f_CodeExample" style="color: #000000;">&nbsp;&nbsp;Forms.RegisterForm(</span><span class="f_CodeExample" style="font-style: italic; color: #ff0000;">{$I&nbsp;%FILE%}</span><span class="f_CodeExample" style="color: #000000;">,&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #000080;">TForm1</span><span class="f_CodeExample" style="color: #000000;">);</span><br>
<span class="f_CodeExample" style="font-weight: bold; color: #000000;">end</span><span class="f_CodeExample" style="color: #000000;">.</span></p>
<p style="background: #fdfdfd; margin: 0px 0px 14px 0px;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<p class="p_CodeExample" style="text-align: justify;"><a href="hm_q01.htm"><img src="btn.jpg" border="0"/></a>
<span class="f_CodeExample" style="font-size: 16px; font-family: 'Times New Roman';">&nbsp;&quot;Hello&nbsp;World&quot;&nbsp;using&nbsp;static&nbsp;method.</span></p>
<p style="background: #fdfdfd; margin: 0px 0px 14px 0px;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<p style="background: #fdfdfd; margin: 0px 0px 14px 0px;"><img src="tipbulb.gif" width="32" height="32" border="0" alt="tipbulb"><span class="f_ImageCaption" style="font-size: 16px; font-family: 'Times New Roman'; font-style: normal; font-weight: bold; color: #800000;">Tips:</span></p>
<div style="text-align: left; text-indent: 0px; border-color: #000000; border-style: solid; border-width: 1px; border-right: none; border-bottom: none; border-left: none; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span class="f_ImageCaption" style="font-size: 16px; font-family: 'Times New Roman'; font-style: normal;">The</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> directive </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #ff0000;">{$I 'Form1:impl'}</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> converts the design view of the form to code, so make any of your code changes to properties of controls after this.</span></td></tr></table></div><p style="background: #fdfdfd;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">The directive </span><span class="f_CodeExample" style="font-size: 16px; font-family: 'Times New Roman'; color: #ff0000;">{$I %FILE%}</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> includes a string containing the current filename where the directive is. See more about </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a href="hm__directives.htm">directives</a></span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">.</span></td></tr></table></div><p style="background: #fdfdfd;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Use </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">F12</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> to toggle between the code of a form and its design view.</span></td></tr></table></div><p style="background: #fdfdfd;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Right click on the design view of the form and select </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">&quot;View XML&quot;</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> to see the properties of all of the components placed on the form. You can edit this settings, see the next tip.</span></td></tr></table></div><p style="background: #fdfdfd;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Most of the source code of demonstrations is &quot;hidden&quot; in the project file (.sproj). Once in the IDE you can right click on the unit name and click on </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">&quot;Make item external&quot;</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> to obtain the Pascal source (.PAS) in the project folder and for the unit of a form, this also gives you the external (.SFM), it's a XML file of the form design. So, you can open it and edit in a external editor (Remember to close current project in SmartMS). It's always a good idea to check </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">&quot;Store new forms and units in external files&quot;</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">, see next tip.</span></td></tr></table></div><p><span style="font-size: 13px;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Tools &gt; IDE Settings &gt; Project Management &gt; (x) Store new forms and units in external files. You can open your units (.pas) and forms (.sfm) and edit them in an external editor.</span></td></tr></table></div><p style="background: #fdfdfd;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; border-color: #000000; border-style: solid; border-width: 1px; border-top: none; border-right: none; border-left: none; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">You can enclose strings in </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">single quotes</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> as usual or in </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">double quotes</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">. Double-quoted strings can span multiple lines.</span></td></tr></table></div><p><span style="font-size: 13px;">&nbsp;</span></p>
<p><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #800000;">Smart Mobile Studio supports:</span></p>
<p><span style="font-size: 13px;">&nbsp;</span></p>
<p><span style="font-size: 13px;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #0000ff; text-decoration: underline;">Variables</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> are guaranteed to always be initialized. Variable declaration can feature an assignment, variable type can be inferred, for instance</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 7px 0px 7px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="18"><img id="$TOGGLE0186A1_ICON" src="mytoggle_plus1.gif" width="9" height="9" border="0" alt="mytoggle_plus1"></td><td><a name="def_var"></a><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a class="dropdown-toggle" href="javascript:myToggle('toggle','TOGGLE0186A1','$TOGGLE0186A1_ICON')">See defining variables example:</a></span></td></tr></table></div><div style="text-align: left; text-indent: -18px; padding: 0px 0px 0px 0px; margin: 7px 0px 7px 18px;"><table id="TOGGLE0186A1" cellspacing="0" cellpadding="0" border="0" style="border: none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td valign="top"><p class="p_CodeExample"><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">var</span><span class="f_CodeExample" style="color: #000000;">&nbsp;i&nbsp;:=&nbsp;</span><span class="f_CodeExample" style="color: #ff0000;">20</span><span class="f_CodeExample" style="color: #000000;">;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample" style="font-style: italic; color: #008000;">//is&nbsp;equivalent&nbsp;to</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">var</span><span class="f_CodeExample" style="color: #000000;">&nbsp;i&nbsp;:&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">Integer</span><span class="f_CodeExample" style="color: #000000;">;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample" style="color: #000000;">i:=</span><span class="f_CodeExample" style="color: #ff0000;">20</span><span class="f_CodeExample" style="color: #000000;">;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample" style="font-style: italic; color: #008000;">//as&nbsp;well&nbsp;as</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">var</span><span class="f_CodeExample" style="color: #000000;">&nbsp;i&nbsp;:&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">Integer</span><span class="f_CodeExample" style="color: #000000;">&nbsp;:=&nbsp;</span><span class="f_CodeExample" style="color: #ff0000;">20</span><span class="f_CodeExample" style="color: #000000;">;</span><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">var</span><span class="f_CodeExample" style="color: #000000;">&nbsp;i&nbsp;:=&nbsp;</span><span class="f_CodeExample" style="color: #ff0000;">20</span><span class="f_CodeExample" style="color: #000000;">;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample" style="font-style: italic; color: #008000;">//is&nbsp;equivalent&nbsp;to</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">var</span><span class="f_CodeExample" style="color: #000000;">&nbsp;i&nbsp;:&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">Integer</span><span class="f_CodeExample" style="color: #000000;">;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample" style="color: #000000;">i:=</span><span class="f_CodeExample" style="color: #ff0000;">20</span><span class="f_CodeExample" style="color: #000000;">;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample" style="font-style: italic; color: #008000;">//as&nbsp;well&nbsp;as</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">var</span><span class="f_CodeExample" style="color: #000000;">&nbsp;i&nbsp;:&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">Integer</span><span class="f_CodeExample" style="color: #000000;">&nbsp;:=&nbsp;</span><span class="f_CodeExample" style="color: #ff0000;">20</span><span class="f_CodeExample" style="color: #000000;">;</span></p>
</td>
</tr>
</table>
</div>
<p style="text-indent: -18px; margin: 7px 0px 7px 18px;"><span style="font-size: 13px;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><a name="arr_const"></a><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #0000ff; text-decoration: underline;">Array Constants</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> Array constants are delimited with square brackets [ ] and not parenthesis ( ). The syntax change was necessary to allow supporting inline static arrays definition, and make provisions for operators operating on arrays and future array comprehension extensions. </span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 7px 0px 7px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="18"><img id="$TOGGLE0186A2_ICON" src="mytoggle_plus1.gif" width="9" height="9" border="0" alt="mytoggle_plus1"></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a class="dropdown-toggle" href="javascript:myToggle('toggle','TOGGLE0186A2','$TOGGLE0186A2_ICON')">See array constants example:</a></span></td></tr></table></div><div style="text-align: left; text-indent: -18px; padding: 0px 0px 0px 0px; margin: 7px 0px 7px 18px;"><table id="TOGGLE0186A2" cellspacing="0" cellpadding="0" border="0" style="border: none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td valign="top"><p class="p_CodeExample"><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">const</span><span class="f_CodeExample" style="color: #000000;">&nbsp;a1&nbsp;:&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">array</span><span class="f_CodeExample" style="color: #000000;">&nbsp;[</span><span class="f_CodeExample" style="color: #ff0000;">0</span><span class="f_CodeExample" style="color: #000000;">..</span><span class="f_CodeExample" style="color: #ff0000;">2</span><span class="f_CodeExample" style="color: #000000;">]&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">of</span><span class="f_CodeExample" style="color: #000000;">&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">String</span><span class="f_CodeExample" style="color: #000000;">&nbsp;=&nbsp;[</span><span class="f_CodeExample" style="color: #000080;">'zero'</span><span class="f_CodeExample" style="color: #000000;">,&nbsp;</span><span class="f_CodeExample" style="color: #000080;">'one'</span><span class="f_CodeExample" style="color: #000000;">,&nbsp;</span><span class="f_CodeExample" style="color: #000080;">'two'</span><span class="f_CodeExample" style="color: #000000;">];</span></p>
<p class="p_CodeExample"><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">var</span><span class="f_CodeExample" style="color: #000000;">&nbsp;a2&nbsp;:&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">array</span><span class="f_CodeExample" style="color: #000000;">&nbsp;[</span><span class="f_CodeExample" style="color: #ff0000;">0</span><span class="f_CodeExample" style="color: #000000;">..</span><span class="f_CodeExample" style="color: #ff0000;">2</span><span class="f_CodeExample" style="color: #000000;">]&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">of</span><span class="f_CodeExample" style="color: #000000;">&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">String</span><span class="f_CodeExample" style="color: #000000;">;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample" style="color: #000000;">a2&nbsp;:=&nbsp;[</span><span class="f_CodeExample" style="color: #000080;">'zero'</span><span class="f_CodeExample" style="color: #000000;">,&nbsp;</span><span class="f_CodeExample" style="color: #000080;">'one'</span><span class="f_CodeExample" style="color: #000000;">,&nbsp;</span><span class="f_CodeExample" style="color: #000080;">'two'</span><span class="f_CodeExample" style="color: #000000;">];</span></p>
</td>
</tr>
</table>
</div>
<p style="text-indent: -18px; margin: 7px 0px 7px 18px;"><span style="font-size: 13px;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><a name="constructor"></a><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #0000ff; text-decoration: underline;">Constructors</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> classic constructor syntax is supported, but you can also specify a default constructor and use the &quot;new&quot; keyword to instantiate classes.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 7px 0px 7px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="18"><img id="$TOGGLE0186A3_ICON" src="mytoggle_plus1.gif" width="9" height="9" border="0" alt="mytoggle_plus1"></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a class="dropdown-toggle" href="javascript:myToggle('toggle','TOGGLE0186A3','$TOGGLE0186A3_ICON')">See calling constructors example:</a></span></td></tr></table></div><div style="text-align: left; text-indent: -18px; padding: 0px 0px 0px 0px; margin: 7px 0px 7px 18px;"><table id="TOGGLE0186A3" cellspacing="0" cellpadding="0" border="0" style="border: none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td valign="top"><p class="p_CodeExample"><span class="f_CodeExample" style="font-style: italic; color: #008000;">//Both&nbsp;lines&nbsp;of&nbsp;code&nbsp;below&nbsp;are&nbsp;equivalent:</span></p>
<p class="p_CodeExample"><span class="f_CodeExample" style="color: #000000;">obj&nbsp;:=&nbsp;TMyObject.</span><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">Create</span><span class="f_CodeExample" style="color: #000000;">(parameter);</span></p>
<p class="p_CodeExample"><span class="f_CodeExample" style="color: #000000;">obj&nbsp;:=&nbsp;</span><span class="f_CodeExample" style="font-weight: bold; color: #0000ff;">new</span><span class="f_CodeExample" style="color: #000000;">&nbsp;TMyObject(parameter);</span></p>
</td>
</tr>
</table>
</div>
<p><span style="font-size: 13px;">&nbsp;</span></p>
<p><span style="font-size: 13px;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Smart Pascal allows you to directly include JavaScript code in </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a href="hm_asm_block.htm">ASM Blocks</a></span></td></tr></table></div><p><span style="font-size: 13px;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">You can use the </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">in</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> and </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">not in</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> operators to test the presence of an element in an array. See others </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a href="hm_operators.htm">operators</a></span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">. You can use the C-style compound operators +=, -=, *= and /=.</span></td></tr></table></div><p><span style="font-size: 13px;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">A dynamic array has useful &quot;pseudo-methods&quot; such as Push, Pop, Clear, Copy, Delete, IndexOf, Swap and Reverse. SmartMS supports </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a href="hm_language_types3.htm#statarr">Static</a></span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> and </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a href="hm_language_types3.htm#dynarr">Dynamic</a></span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> arrays.</span></td></tr></table></div><p><span style="font-size: 13px;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Case statements can use any data type as a selector (not only an integer as in pure Pascal). See </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a href="hm_statements.htm">statements</a></span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">.</span></td></tr></table></div><p><span style="font-size: 13px;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Support </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a href="hm_looping.htm">loops</a></span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> support the step parameter, which must be positive.</span></td></tr></table></div><p><span style="font-size: 13px;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a href="hm_working_compile_make_3_8.htm">Comments</a></span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> cannot be nested.</span></td></tr></table></div><p><span style="font-size: 13px;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">There are many inbuilt </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a href="hm_built_in_functions.htm">handy functions</a></span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> such as Clamp (to limit a value to an interval), IsPrime, IsDelimiter, StrSplit and StrJoin.</span></td></tr></table></div><p><span style="font-size: 13px;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">Code structure: </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">c</span><span class="f_ImageCaption" style="font-size: 16px; font-family: 'Times New Roman'; font-style: normal;">ode structure is essentially standard Pascal with the following changes. See more </span><span class="f_ImageCaption" style="font-size: 16px; font-family: 'Times New Roman'; font-style: normal; font-weight: bold;"><a href="hm_code_structure.htm">here</a></span><span class="f_ImageCaption" style="font-size: 16px; font-family: 'Times New Roman'; font-style: normal;">.</span></td></tr></table></div><p style="background: #fdfdfd;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">RTTI: </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Some aspects of RTTI are on the drawing board, but as of writing this is not something we support. See more details </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a href="hm_rtti.htm">here</a></span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">.</span></td></tr></table></div><p style="background: #fdfdfd;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">Exceptions: </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Smart has full support for exceptions. JavaScript exceptions will surface as ordinary Object Pascal exceptions and can be handled the exact same way. There is one small difference however, see </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a href="hm_exceptions.htm">here</a></span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">.</span></td></tr></table></div><p style="background: #fdfdfd;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">Data Types: </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">SmartMS supports the following data-types and arrays of these. The range of types is limited by JavaScript. More info, click </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a href="hm_datatypes.htm">here</a></span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">.</span></td></tr></table></div><p style="background: #fdfdfd;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">Common RTL units: </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">SmartMS does not try to mimic the Delphi unit names, although the list of functionality and component architecture share many similarities. The Smart RTL is in constant growth but as of writing the following units can be concidered “standard”. There are of course more units in our runtime library. but these units represent the central hub of our system. See more at </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a href="hm_application.htm">RTL</a></span></td></tr></table></div><p style="background: #fdfdfd;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">Interfaces: </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">SmartMS fully supports </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a href="hm_interface.htm">interfaces</a></span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">. </span></td></tr></table></div><p style="background: #fdfdfd;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a href="hm_class.htm">Classes</a>, Constructors and Destructors.</span></td></tr></table></div><p style="background: #fdfdfd;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a href="hm_language_types4.htm">Records</a> </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">and also arrays of records, both dynamic and static.</span></td></tr></table></div><p style="background: #fdfdfd;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"><a href="hm_anonymous_methods.htm#evnthdl">Events and event handlers</a></span></td></tr></table></div><p style="background: #fdfdfd;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">Pointers: </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">JavaScript does not support pointers but deals exclusively with </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-style: italic; color: #000000;">references</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> , as such the pointer data-type serves no function and does not exist in our flavour of Object Pascal.&nbsp; In short we can say that JavaScript deals with references and values in 3 ways:</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">references to native objects provided by the browser</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">variables holding data structures created by JavaScript (including JavaScript prototype objects)</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">references to JavaScript values or functions (functions can return functions in JavaScript)</span></td></tr></table></div><p style="background: #fdfdfd; margin: 0px 0px 0px 24px;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<p style="background: #fdfdfd;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">What we have done to clean up this mess – is to map our rigid Object Pascal terminology onto the unstructured and colorful JavaScript mesh. Our goal has not been to make Object Pascal look like JavaScript, but rather to force JavaScript to abide by our rules. This is much more elegant than trying to mimic or fake a datatype that doesnt exist:</span></p>
<div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">You handle object references with </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">TObject</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">you handle data structures with records or variants</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">you handle values using normal variable types</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; background: #fdfdfd; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 16px; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">You handle function references with procedural types (see events and event handlers above)</span></td></tr></table></div><p style="background: #fdfdfd;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<p style="text-align: justify; background: #fdfdfd; margin: 9px 0px 14px 0px;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<p style="background: #fdfdfd; margin: 0px 0px 9px 0px;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>
<p style="background: #fdfdfd; margin: 0px 0px 9px 0px;"><span style="font-size: 13px; background-color: #fdfdfd;">&nbsp;</span></p>

</td></tr></table>

<script type="text/javascript">
if (window.topicInitScriptAvailable) {
myInitToggle('TOGGLE0186A1','hm.type','dropdown','hm.state','0');
myInitToggle('$TOGGLE0186A1_ICON','hm.type','dropdown','hm.state','0','hm.src0','mytoggle_plus0.gif','hm.src1','mytoggle_plus1.gif','onclick','myToggle(\'toggle\',\'TOGGLE0186A1\',\'\$TOGGLE0186A1_ICON\')');
myInitToggle('TOGGLE0186A2','hm.type','dropdown','hm.state','0');
myInitToggle('$TOGGLE0186A2_ICON','hm.type','dropdown','hm.state','0','hm.src0','mytoggle_plus0.gif','hm.src1','mytoggle_plus1.gif','onclick','myToggle(\'toggle\',\'TOGGLE0186A2\',\'\$TOGGLE0186A2_ICON\')');
myInitToggle('TOGGLE0186A3','hm.type','dropdown','hm.state','0');
myInitToggle('$TOGGLE0186A3_ICON','hm.type','dropdown','hm.state','0','hm.src0','mytoggle_plus0.gif','hm.src1','mytoggle_plus1.gif','onclick','myToggle(\'toggle\',\'TOGGLE0186A3\',\'\$TOGGLE0186A3_ICON\')');
}
</script>
</body>
</html>
