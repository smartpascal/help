<!-- (0045)$H -->
<html oncontextmenu="return false">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Smart Pascal : $H command</title>
<meta name="Description" content="">
<meta name="Keywords" content="Delphi, Delphi Programming, Basics, Keyword, Command, $H, RTL ">

<link rel="stylesheet" type="text/css" href="css/delphi.css" />

</head>
<body bgcolor="#FFFFFF">
<table width="984" cellpadding="0" cellspacing="0" border="0" align="center">
<tr>
<td>
<table width="100%" cellpadding="5" cellspacing="0" border="0" align="center"><tr>
<td>
<b><a href="index.htm"><font color="#A00000" size="6">Smart</font></a><font color="#000000" size="2"><a href="index.htm">Pascal</a></font></b>
</tr>

<tr height="50" valign="top" bgcolor="#DDDDDD">

<td><font color="#0000A0" face="Courier New" size="5"><b>$H</b><br><font face="Arial,Helvetica,Sans-Serif" size="1">Compiler Directive</font></font></td>

<td align="center"><font color="#444444" face="Courier New" size="4">Treat <b>string</b> types as <b>AnsiString</b> or <b>ShortString</b></font></td>

</tr>
</table>
</td>
</tr>
<tr>
<td>
<table width="100%" border="0" cellpadding="5" cellspacing="0" align="center" bgcolor="#F8F8F8">
<tr valign="top">

<td width="15" align="right"><font face="Courier New" size="2" color="#FF0000"><b>1</b></font></td>

<td><font face="Courier New" size="2">&nbsp;
{<b>$H</b>-}
</font></td>

</tr>

<tr valign="top">
<td width="15" align="right"><font face="Courier New" size="2" color="#FF0000"><b>2</b></font></td>

<td><font face="Courier New" size="2">&nbsp;
{<b>$H</b>+}
</font></td>

</tr>

</table>
</td>
</tr>
<tr height="10"><td></td></tr>
</table>
<table width="984" border="0" cellspacing="0" cellpadding="0" align="center">
<tr valign="top">
<td width="380">
<table border="0" cellpadding="7" cellspacing="0">
<tr height="30"><td class="title" bgcolor="#FEF5B5"><b>Description</b></td></tr>
<tr bgcolor="#FFFEEB"><td>
The <font color=#996600><b>$H</b></font> compiler directive determines whether Delphi treats the <b>string</b> type as an <b>AnsiString</b> when on (default) or <b>ShortString</b> when off.
<br>&nbsp;<br>
The default recognises that the general use of <b>string</b> types is to hold data that is likely to be longer than 255 characters (<b>ShortString</b> capacity).
</td></tr>

<tr height="10"><td></td></tr>
<tr height="30"><td class="title" bgcolor="#FFD6D4"><b>Notes</b></td></tr>
<tr bgcolor="#FFF5F3"><td>
<b>$LongStrings</b> is equivalent to <font color=#996600><b>$H</b></font>.<br>
<br>
<font color=#996600><b>$H</b></font> can be used multiple times in your code, but this is not recommended (except for illustration purposes in the example).<br>
<br>
The default value is $H+<br>
</td></tr>

<tr height="10"><td></td></tr>
<tr height="30" bgcolor="#DADAF0"><td class="h2"><b>Related commands</b></td></tr>
<tr bgcolor="#F9F9FF"><td>
<table cellpadding="0" cellspacing="0">

<tr valign="top">
<td><b><a href="$longstrings.htm">$LongStrings</a></b></td>
<td width="8"></td>
<td align="left">Treat <b>string</b> types as <b>AnsiString</b> or <b>ShortString</b></td>
</tr>

<tr valign="top">
<td><b><a href="ansistring.htm">AnsiString</a></b></td>
<td width="8"></td>
<td align="left">A data type that holds a string of AnsiChars</td>
</tr>

<tr valign="top">
<td><b><a href="shortstring.htm">ShortString</a></b></td>
<td width="8"></td>
<td align="left">Defines a string of up to 255 characters</td>
</tr>

<tr valign="top">
<td><b><a href="string.htm">String</a></b></td>
<td width="8"></td>
<td align="left">A data type that holds a string of characters</td>
</tr>

</table>
</td>
</tr>

</table>
</td>
<td width="8">&nbsp;</td>

<td width="690">
<table width="100%" border="0" cellpadding="6" cellspacing="0">
<tr height="30"><td class="h1" bgcolor="#BCF6BB"><a name="Ex1"></a><b>Example code : Creating two types of string in the same code</b></tr>
<tr bgcolor="#FAFAFA"><td><font face="Courier New" size="2">
<b> var</b><br>&nbsp;&nbsp;<font color=#008000><b>// Define littleString to be treated as a ShortString</b></font><br>
&nbsp;&nbsp;{<font color=#C00000><b>$H</b></font>-}<br>
&nbsp;&nbsp;littleString : string;<br><b>
</b><br>&nbsp;&nbsp;<font color=#008000><b>// Define bigString to be treated as an AnsiString</b></font><br>
&nbsp;&nbsp;{<font color=#C00000><b>$H</b></font>+}<br>
&nbsp;&nbsp;bigString : string;<br><b>
begin</b><br>&nbsp;&nbsp;<font color=#008000><b>// Show the size of the little string - 256 bytes</b></font><br>
&nbsp;&nbsp;ShowMessageFmt('littleString size = %d',[SizeOf(littleString)]);<br><b>
</b><br>&nbsp;&nbsp;<font color=#008000><b>// Show the size of the big string - 4 - a pointer to text</b></font><br>
&nbsp;&nbsp;ShowMessageFmt('&nbsp;&nbsp; bigString size = %d',[SizeOf(bigString)]);<br><b>
end;</b><br>
</font></td></tr>
<tr bgcolor="#D2ECCF">
 
<td align="right"><a href="$h&expandcode1=yes.htm#Ex1"><font face="Arial,Helvetica,Sans-Serif" size="1">Show full unit code</font></a></td>

</tr>
<tr bgcolor="#D2ECCF"><td><font face="Courier New" size="2">
&nbsp;&nbsp;&nbsp;littleString size = 256<br>&nbsp;&nbsp;
&nbsp;&nbsp; bigString size = 4<br>
&nbsp;
</font></td></tr>

</table>
</td>

</tr>
<tr height="10"><td>&nbsp;</td></tr>
</table>

</html>
