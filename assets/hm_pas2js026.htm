<!DOCTYPE html>
<html>
<head>
<title></title>
<meta name=viewport content="width=device-width, initial-scale=1">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />   
<link type="text/css" href="css/styles.css" rel="stylesheet" />
<link type="text/css" href="css/custom.css" rel="stylesheet" />
<link rel="stylesheet" title="Default" href="css/default.css"> 
<script type="text/javascript" src="js/jquery.js"></script>
<script src="js/highlight.min.js"></script>
<script src="js/delphi.min.js"></script>
<script src="js/javascript.min.js"></script>   
<script type="text/javascript">
hljs.tabReplace='    ';hljs.initHighlightingOnLoad();function showme(id){var divid=document.getElementById(id);if(divid.style.display=='block')divid.style.display='none';else divid.style.display='block';}
$(document).ready(function(){$("button").click(function(){$(this).text($(this).text()=='Show JS code'?'Hide JS code':'Show JS code');showme('widget');});});
</script>   
<style> 
html, body { margin:0; padding:0; background: #ffffff;} 
#idheader {width:100%; height:auto; padding: 0; margin: 0;position: fixed;top: 0;
z-index: 2;} 
#idheader table { background: #2C5D88; min-height: 59px }             
#idheader h1 { color: #FFF }     
#idnav {text-align: right; width: 158px; vertical-align: middle;} 
#idnav a { text-decoration: none }
#idnav span {display: inline-block;width: 24px;height: 24px;margin-left: 4px;
background:url('css/img/hm_webhelp_buttons_grey.png') top left no-repeat;} 
#idnav a span {background-image:url('css/img/hm_webhelp_buttons_white.png');} 
#idnav a span:hover {background-image:url('css/img/hm_webhelp_buttons_orange.png');} 
#idnav span.hmbtnprev { background-position: 0 -32px }
#idnav span.hmbtnnext { background-position: -24px -32px }
#idnav span.hmbtntop  { background-position: -48px -32px }
.language-css {background-color: #cd6a51;content: attr(rel);color: white;position: absolute;
width: 100%;background: #e18728;font-family: 'PT Serif', serif;padding: 5px 0;text-indent: 15px;font-size: 17px;font-weight: 300;line-height: 1.45;font-weight: 700;}
#checkoutbutton {
    background-color: #2C5D88;
  -moz-border-radius: 15px;
  -webkit-border-radius: 15px;
  color: #FFFFFF;
  border: 5px solid #e18728;
  padding: 2px;
  margin: 0px 0px 0px 25px;
}
#checkoutbutton:hover {opacity: 0.6; }
</style>
</head>
<body>
<div id="idheader">
<div id="idheaderbg">
<table style="width:100%;border:none;margin:0px;" cellspacing="0" cellpadding="0"> 
  <tr>
    <td class="topichead" style="text-align:left;">
      <h1 class="p_Heading1" style="page-break-after: avoid;"><span class="f_Heading1">Dynamic Array Stack (Pop method)</span></h1>
    </td>
    <td class="topichead" id="idnav">
      <a href="hm_pas2js025.htm"><span class="hmbtnprev"></span></a>
      <a href="index.htm" title="Parent Chapter"><span class="hmbtntop"></span></a>
      <a href="hm_pas2js027.htm"><span class="hmbtnnext"></span></a>
     </td>  
  </tr>  
</table>
</div>
</div>  

<br/><br/>
<table style="width:100%;border:none;margin:10px;" cellspacing="0" cellpadding="0">
  <tr>
	<td>
	Dynamic Array (Pop, Push, IntToHex methods)
	</td>
  </tr>
</table>
	
<pre><span id="code" class="language-css">Smart pascal source code</span><br>
<code class="delphi" style="background-color: #FFFEEB;">
type
  TRec = record
    V: Integer;
    N: string;
    procedure ShowWriteln;
    begin
      Writeln(IntToStr(V) + ', ' + N);
    end;
  end;
  
{ main.pas unit}
var
  a: array of Integer;
  r: array of TRec;
  i: Integer;
  buf: TRec;

  procedure PopAFew(n: Integer; a: array of Integer; r: array of TRec);
  begin
    while n > 0 do
    begin
      Writeln(a.Pop);
      Writeln(': ');
      r.Pop.ShowWriteln;
      Dec(n);
    end;
  end;

procedure printData;
begin
 Writeln('Remain: ' + IntToStr(Length(a)) + ', ' + IntToStr(Length(r)));
end;

begin
  for i := 1 to 10 do
  begin
    buf.V := i * 2;
    buf.N := UpperCase(IntToHex(buf.V, 2));
    r.Push(buf);
    a.Push(i);
  end;

  PopAFew(5, a, r);
{ outputs
  10 : 20, 14
   9 : 18, 12
   8 : 16, 10
   7 : 0E
   6 : 0C
}
  printData;  // Remain: 5, 5


  i := a.Pop;
  buf := r.Pop;
  printData;  // Remain: 4, 4

  PopAFew(4, a, r);
{ outputs
   4 : 8, 08
   3 : 6, 06
   2 : 4, 04
   1 : 2, 02
}
  printData;  // Remain: 0, 0

</code></pre>
<button type="button" id="checkoutbutton">Show JS code</button>
<div id="widget" style="display:none;">
<pre>
<code class="javascript">
      var a = [],
         r = [],
         i = 0;
      var buf = {V:0,N:""};
      function printData() {
         WriteLn(("Remain: "+(a.length).toString()+", "+(r.length).toString()));
      };
      function PopAFew(n, a$1, r$1) {
         while (n>0) {
            WriteLn(a$1.pop());
            WriteLn(": ");
            TRec$ShowWriteln(r$1.pop());
            --n;
         }
      };
      for(i=1;i<=10;i++) {
         buf.V = i*2;
         buf.N = (IntToHex2(buf.V)).toUpperCase();
         r.push(Clone$TRec(buf));
         a.push(i);
      }
      PopAFew(5,a,r);
      printData();
      i = a.pop();
      Copy$TRec(r.pop(),buf);
      printData();
      PopAFew(4,a,r);
      printData();

/// TRec = record
///  [line: 73, column: 3, file: uMain]
function Copy$TRec(s,d) {
   d.V=s.V;
   d.N=s.N;
   return d;
}
function Clone$TRec($) {
   return {
      V:$.V,
      N:$.N
   }
}
/// procedure TRec.ShowWriteln(var Self: TRec)
///  [line: 76, column: 15, file: uMain]
function TRec$ShowWriteln(Self$1) {
   WriteLn(((Self$1.V).toString()+", "+Self$1.N));
}
function IntToHex2(v) { var r=v.toString(16); return (r.length==1)?"0"+r:r }	  

</code></pre></div>
</div>
</body>
</html>
