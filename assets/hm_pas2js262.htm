<!DOCTYPE html>
<html>
<head>
<title></title>
<meta name=viewport content="width=device-width, initial-scale=1">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />   
<link type="text/css" href="css/styles.css" rel="stylesheet" />
<link type="text/css" href="css/custom.css" rel="stylesheet" />
<link rel="stylesheet" title="Default" href="css/default.css"> 
<script type="text/javascript" src="js/jquery.js"></script>
<script src="js/highlight.min.js"></script>
<script src="js/delphi.min.js"></script>
<script src="js/javascript.min.js"></script>   
<script type="text/javascript">
hljs.tabReplace='    ';hljs.initHighlightingOnLoad();function showme(id){var divid=document.getElementById(id);if(divid.style.display=='block')divid.style.display='none';else divid.style.display='block';}
$(document).ready(function(){$("button").click(function(){$(this).text($(this).text()=='Show JS code'?'Hide JS code':'Show JS code');showme('widget');});});
</script>   
<style> 
html, body { margin:0; padding:0; background: #ffffff;} 
#idheader {width:100%; height:auto; padding: 0; margin: 0;position: fixed;top: 0;
z-index: 2;} 
#idheader table { background: #2C5D88; min-height: 59px }             
#idheader h1 { color: #FFF }     
#idnav {text-align: right; width: 158px; vertical-align: middle;} 
#idnav a { text-decoration: none }
#idnav span {display: inline-block;width: 24px;height: 24px;margin-left: 4px;
background:url('css/img/hm_webhelp_buttons_grey.png') top left no-repeat;} 
#idnav a span {background-image:url('css/img/hm_webhelp_buttons_white.png');} 
#idnav a span:hover {background-image:url('css/img/hm_webhelp_buttons_orange.png');} 
#idnav span.hmbtnprev { background-position: 0 -32px }
#idnav span.hmbtnnext { background-position: -24px -32px }
#idnav span.hmbtntop  { background-position: -48px -32px }
.language-css {background-color: #cd6a51;content: attr(rel);color: white;position: absolute;
width: 100%;background: #e18728;font-family: 'PT Serif', serif;padding: 5px 0;text-indent: 15px;font-size: 17px;font-weight: 300;line-height: 1.45;font-weight: 700;}
#checkoutbutton {
    background-color: #2C5D88;
  -moz-border-radius: 15px;
  -webkit-border-radius: 15px;
  color: #FFFFFF;
  border: 5px solid #e18728;
  padding: 2px;
  margin: 0px 0px 0px 25px;
}
#checkoutbutton:hover {opacity: 0.6; }
</style>
</head>
<body>
<div id="idheader">
<div id="idheaderbg">
<table style="width:100%;border:none;margin:0px;" cellspacing="0" cellpadding="0"> 
  <tr>
    <td class="topichead" style="text-align:left;">
      <h1 class="p_Heading1" style="page-break-after: avoid;"><span class="f_Heading1">oop is as</span></h1>
    </td>
    <td class="topichead" id="idnav">
      <a href="hm_pas2js261.htm"><span class="hmbtnprev"></span></a>
      <a href="index.htm" title="Parent Chapter"><span class="hmbtntop"></span></a>
      <a href="hm_pas2js263.htm"><span class="hmbtnnext"></span></a>
     </td>  
  </tr>  
</table>
</div>
</div>  

<br/><br/>
<table style="width:100%;border:none;margin:10px;" cellspacing="0" cellpadding="0">
  <tr>
	<td>
	oop is as
	</td>
  </tr>
</table>
	
<pre><span id="code" class="language-css">Smart pascal source code</span><br>
<code class="delphi" style="background-color: #FFFEEB;">
{
  Demo: Object Orientated Programming (OOP)

}
type
  AClass = class
    function Q: string;
  end;

type
  BClass = class(AClass)
    function Q: string;
  end;

type
  CClass = class
    function Q: string;
  end;

function AClass.Q: string;
begin
  Result := 'AClass.Q: Static method';
end;

function BClass.Q: string;
begin
  Result := 'BClass.Q: Static method';
end;

function CClass.Q: string;
begin
  Result := 'CClass.Q: Static method';
end;

var objA, objB: AClass;

objA := AClass.Create;
objB := BClass.Create;

if objA is AClass then
  WriteLn('objA is AClass');
if objA is BClass then
  WriteLn('objA is BClass');
if objA is CClass then
  WriteLn('objA is CClass');

if objB is AClass then
  WriteLn('objB is AClass');
if objB is BClass then
  WriteLn('objB is BClass');
if objB is CClass then
  WriteLn('objB is CClass');

WriteLn((objA as AClass).Q);
try
  WriteLn((objA as BClass).Q);
except
  WriteLn('objA isn''t BClass');
end;
try
  WriteLn((objA as CClass).Q);
except
  WriteLn('objA isn''t CClass');
end;

WriteLn((objB as AClass).Q);
WriteLn((objB as BClass).Q);
try
  WriteLn((objB as CClass).Q);
except
  WriteLn('objB isn''t CClass');
end;

{<<< RESULT - CONSOLE LOG >>>
-----------------------------
Errors >>>>
Warning: Incompatible types: "AClass" and "CClass" [line: 42, column: 9]
Warning: Incompatible types: "AClass" and "CClass" [line: 46, column: 9]
Result >>>>
objA is AClass
objB is AClass
objB is BClass
AClass.Q: Static method
objA isn't BClass
objA isn't CClass
AClass.Q: Static method
BClass.Q: Static method
objB isn't CClass

-----------------------------
{<<<<<<<<< THE END >>>>>>>>>}
</code></pre>
<button type="button" id="checkoutbutton">Show JS code</button>
<div id="widget" style="display:none;">
<pre>
<code class="javascript">
var CClass = {
   $ClassName:"CClass",$Parent:TObject
   ,$Init:function ($) {
      TObject.$Init($);
   }
   ,Q:function(Self) {
      return "CClass.Q: Static method";
   }
   ,Destroy:TObject.Destroy
};
var AClass = {
   $ClassName:"AClass",$Parent:TObject
   ,$Init:function ($) {
      TObject.$Init($);
   }
   ,Q$1:function(Self) {
      return "AClass.Q: Static method";
   }
   ,Destroy:TObject.Destroy
};
var BClass = {
   $ClassName:"BClass",$Parent:AClass
   ,$Init:function ($) {
      AClass.$Init($);
   }
   ,Q$2:function(Self) {
      return "BClass.Q: Static method";
   }
   ,Destroy:TObject.Destroy
};
var objA = null;
var objB = null;

/* <<< main JS >>> */

   objA = TObject.Create($New(AClass));
   objB = TObject.Create($New(BClass));
   if ($Is(objA,AClass)) {
      WriteLn("objA is AClass");
   }
   if ($Is(objA,BClass)) {
      WriteLn("objA is BClass");
   }
   if ($Is(objA,CClass)) {
      WriteLn("objA is CClass");
   }
   if ($Is(objB,AClass)) {
      WriteLn("objB is AClass");
   }
   if ($Is(objB,BClass)) {
      WriteLn("objB is BClass");
   }
   if ($Is(objB,CClass)) {
      WriteLn("objB is CClass");
   }
   WriteLn(AClass.Q$1(objA));
   try {
      WriteLn(BClass.Q$2($As(objA,BClass)));
   } catch ($e) {
      WriteLn("objA isn't BClass");
   }
   try {
      WriteLn(CClass.Q($As(objA,CClass)));
   } catch ($e) {
      WriteLn("objA isn't CClass");
   }
   WriteLn(AClass.Q$1(objB));
   WriteLn(BClass.Q$2($As(objB,BClass)));
   try {
      WriteLn(CClass.Q($As(objB,CClass)));
   } catch ($e) {
      WriteLn("objB isn't CClass");
   }
</code></pre></div>
</div>
</body>
</html>
