<!DOCTYPE html>
<html>
<head>
<title></title>
<meta name=viewport content="width=device-width, initial-scale=1">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />   
<link type="text/css" href="css/styles.css" rel="stylesheet" />
<link type="text/css" href="css/custom.css" rel="stylesheet" />
<link rel="stylesheet" title="Default" href="css/default.css"> 
<script type="text/javascript" src="js/jquery.js"></script>
<script src="js/highlight.min.js"></script>
<script src="js/delphi.min.js"></script>
<script src="js/javascript.min.js"></script>   
<script type="text/javascript">
hljs.tabReplace='    ';hljs.initHighlightingOnLoad();function showme(id){var divid=document.getElementById(id);if(divid.style.display=='block')divid.style.display='none';else divid.style.display='block';}
$(document).ready(function(){$("button").click(function(){$(this).text($(this).text()=='Show JS code'?'Hide JS code':'Show JS code');showme('widget');});});
</script>   
<style> 
html, body { margin:0; padding:0; background: #ffffff;} 
#idheader {width:100%; height:auto; padding: 0; margin: 0;position: fixed;top: 0;
z-index: 2;} 
#idheader table { background: #2C5D88; min-height: 59px }             
#idheader h1 { color: #FFF }     
#idnav {text-align: right; width: 158px; vertical-align: middle;} 
#idnav a { text-decoration: none }
#idnav span {display: inline-block;width: 24px;height: 24px;margin-left: 4px;
background:url('css/img/hm_webhelp_buttons_grey.png') top left no-repeat;} 
#idnav a span {background-image:url('css/img/hm_webhelp_buttons_white.png');} 
#idnav a span:hover {background-image:url('css/img/hm_webhelp_buttons_orange.png');} 
#idnav span.hmbtnprev { background-position: 0 -32px }
#idnav span.hmbtnnext { background-position: -24px -32px }
#idnav span.hmbtntop  { background-position: -48px -32px }
.language-css {background-color: #cd6a51;content: attr(rel);color: white;position: absolute;
width: 100%;background: #e18728;font-family: 'PT Serif', serif;padding: 5px 0;text-indent: 15px;font-size: 17px;font-weight: 300;line-height: 1.45;font-weight: 700;}
#checkoutbutton {
    background-color: #2C5D88;
  -moz-border-radius: 15px;
  -webkit-border-radius: 15px;
  color: #FFFFFF;
  border: 5px solid #e18728;
  padding: 2px;
  margin: 0px 0px 0px 25px;
}
#checkoutbutton:hover {opacity: 0.6; }
</style>
</head>
<body>
<div id="idheader">
<div id="idheaderbg">
<table style="width:100%;border:none;margin:0px;" cellspacing="0" cellpadding="0"> 
  <tr>
    <td class="topichead" style="text-align:left;">
      <h1 class="p_Heading1" style="page-break-after: avoid;"><span class="f_Heading1">Array of Record Type Initialization</span></h1>
    </td>
    <td class="topichead" id="idnav">
      <a href="hm_pas2js015.htm"><span class="hmbtnprev"></span></a>
      <a href="index.htm" title="Parent Chapter"><span class="hmbtntop"></span></a>
      <a href="hm_pas2js017.htm"><span class="hmbtnnext"></span></a>
     </td>  
  </tr>  
</table>
</div>
</div>  

<br/><br/>
<table style="width:100%;border:none;margin:10px;" cellspacing="0" cellpadding="0">
  <tr>
	<td>
Array of Record Type Initialization
	</td>
  </tr>
</table>
	
<pre><span id="code" class="language-css">Smart pascal source code</span><br>
<code class="delphi" style="background-color: #FFFEEB;">
type
  TRec = record
    Field: Integer
  end;

type
   TRec2 = record
      A : Integer;
	  B : String;
	  c : Boolean;
   end;

{ unit1.pas }

const
  a1: array [0..0] of TRec = [(Field: 1)];
var
  a2: array [1..2] of TRec = [(Field: 2), (Field: 3)];
  a3: array [0..1] of TRec2  = [
   	(A: 1; b: "One"; c: True),(A: 2; B: 'two'; c: False)];

begin
  Writeln(a1[0].Field);  // 1
  Writeln(a2[1].Field);  // 2
  Writeln(a2[2].Field);  // 3

{ test II }
for var i in a3 do
begin
	WriteLn(i.A); // 1  2
	WriteLn(i.B);  // one  two
	WriteLn(i.C);  // true  false
end;

</code></pre>
<button type="button" id="checkoutbutton">Show JS code</button>
<div id="widget" style="display:none;">
<pre>
<code class="javascript">
  var a2 = [{Field:0},{Field:0}],
	 a2 = [{Field:2}, {Field:3}];
  var a3 = [{A$1:0,B:"",c:false},{A$1:0,B:"",c:false}],
	 a3 = [{A$1:1,B:"One",c:true}, {A$1:2,B:"two",c:false}];
  var a$1 = 0;
  var i = {A$1:0,B:"",c:false};
  var a1 = [{Field:1}];
  WriteLn({Field:1}.Field);
  WriteLn(a2[(1)-1].Field);
  WriteLn(a2[(2)-1].Field);
  for(a$1=0;a$1<=1;a$1++) {
	 Copy$TRec2(a3[a$1],i);
	 WriteLn(i.A$1);
	 WriteLn(i.B);
	 WriteLn(i.c);
  }

  function Copy$TRec2(s,d) {
   d.A$1=s.A$1;
   d.B=s.B;
   d.c=s.c;
   return d;
}
function Clone$TRec2($) {
   return {
      A$1:$.A$1,
      B:$.B,
      c:$.c
   }
}

function Copy$TRec(s,d) {
   d.Field=s.Field;
   return d;
}
function Clone$TRec($) {
   return {
      Field:$.Field
   }
}
</code></pre></div>
</div>
</body>
</html>
