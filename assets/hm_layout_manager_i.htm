<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html oncontextmenu="return false">
<head>
   <title>Layout manager I</title>
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="styles.css" rel="stylesheet" />

<script type="text/javascript" src="js/toc.js"></script>
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;">
<div id="hmpopupDiv" style="visibility:hidden; position:absolute; z-index:1000; filter:progid:DXImageTransform.Microsoft.DropShadow(color='b0b0b0', Direction=135, OffX='3', OffY='3') progid:DXImageTransform.Microsoft.Fade(Overlap=1.00);"></div>


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#C0C0C0">
  <tr valign="middle">
    <td align="left">
      <p class="p_Heading1"><span class="f_Heading1" style="font-weight: bold; color: #ffffff;">Layout manager I</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="index.htm">Top</a>&nbsp;
     <a href="hm_qs_file.htm">Previous</a>&nbsp;
     <a href="hm_layout_manager_ii.htm">Next</a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">You can drop components on the designer and set their size but there’s no mechanism for dynamic size adjustments. In other words – there is no Align, no Anchors, no Margins and no layouts (as TFlowPanel and TGridPanel in Delphi). We have to resize components in code, in the overloaded Resize method.</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">I quickly got sick of writing resizing code and decided to alleviate the problem by writing a layout manager. It does not work in the designer, you have to declare and use it in code, but still it is a big simplification over the default "just call SetBounds from Resize" approach. I donated layout manager to the Smart project and it is included in the 1.0 release as the w3layout unit.</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">This article starts a short series which will explain layout manager on simple examples. All of those examples are also included with the Smart installations (look in Demos, LayoutManagerDemo).</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">The first example (LayoutDemo1 project) replicates one of first Delphi demos – Edit/Button/Memo. We want to have an edit field on the top of the form, a button underneath it and a memo control which fills all the remaining form space.</span></p>
<p style="margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">We can start by dropping controls on the design form and renaming them appropriately.</span></p>
<p style="margin: 7px 0px 7px 0px;"><span style="font-size: 13px;">&nbsp;</span></p>
<p><img src="hm_clip0010.png" width="333" height="456" border="0" alt="hm_clip0010"></p>
<p style="margin: 7px 0px 7px 0px;"><span style="font-size: 13px;">&nbsp;</span></p>
<p style="margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">In Delphi we would simply set Edit1.Align to alTop, Button1.Align to alTop and Memo1.Align to alClient. Well, we can do something similar in Smart.</span></p>
<p><span style="font-size: 13px;">&nbsp;</span></p>
<p style="background: #ffff99;"><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #800000;">procedure</span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #ffffff;"> </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">TForm1.InitializeObject;</span></p>
<p style="background: #ffff99;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #800000;">begin</span></p>
<p style="background: #ffff99;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #ffffff;">  </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #800000;">inherited</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">;</span></p>
<p style="background: #ffff99;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">  </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #008080;">{$I 'Form1:impl'}</span></p>
<p style="background: #ffff99;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> &nbsp;FLayout</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #ffffff;"> </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">:=</span></p>
<p style="background: #ffff99;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #ffffff;"> &nbsp; &nbsp;  </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Layout</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #008080;">{1}</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">.Client(Layout.Margins(</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #0000ff;">3</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">).Spacing(</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #0000ff;">3</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">),</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #ffffff;"> </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">[</span></p>
<p style="background: #ffff99;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #ffffff;"> &nbsp; &nbsp;  </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Layout</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #008080;">{2}</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">.Top(Edit1),</span></p>
<p style="background: #ffff99;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #ffffff;"> &nbsp; &nbsp;  </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Layout</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #008080;">{3}</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">.Top(Button1),</span></p>
<p style="background: #ffff99;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #ffffff;"> &nbsp; &nbsp;  </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Layout</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #008080;">{4}</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">.Client(Memo1)</span></p>
<p style="background: #ffff99;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #ffffff;"> &nbsp;  </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">]);</span></p>
<p style="background: #ffff99;"><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #800000;">end</span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">;</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">This code creates a </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-style: italic; color: #000000;">layout</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> (FLayout is defined a field of type TLayout in the form class). This layout contains of an </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-style: italic; color: #000000;">outer</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> layout 1 (marked {1} in the code) containing three </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-style: italic; color: #000000;">inner </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">layouts (2, 3, 4). Each of the inner layouts contains its own component.</span></p>
<p style="margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">Layout Basic</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Before I continue I shall say something about layouts so that you’ll understand better what’s going on.</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Each layout lies in a container. In the example above, layout 1 doesn’t have container defined (we’ll fix this in the Resize) while layouts 2 to 4 are contained in the layout 1.</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Each layout can contain one or more components, where by a </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-style: italic; color: #000000;">component</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> I mean another layout or a Smart control.</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Each layout can have configuration options defined. Configuration options are passed as an optional first parameter. In the example below, layout 1 has </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-style: italic; color: #000000;">margins</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> set to 3 and </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-style: italic; color: #000000;">spacing</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> to 3.</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; font-style: italic; font-weight: bold; color: #000000;">Margins</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> specify the distance between the layout and the container which holds this layout. You can set all margins to the same number or specify different value for each margin (top, bottom, left, right).</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; font-style: italic; font-weight: bold; color: #000000;">Padding</span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"> </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">(not used in this example) is similar to margins but works inside. Padding specifies the distance between the layout and contained controls.</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; font-style: italic; font-weight: bold; color: #000000;">Spacing</span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;"> </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">only applies to a layout that contains more than one control and specifies additional spacing between controls.</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Layout can be </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">Top, Bottom, Left, Right, or Client</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> aligned.</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Some placement parameters (position, size) can be determined from the external container (the one I said we’ll specify in the Resize). Others are taken from the contained control. In the example above, Layout 2 </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-style: italic; color: #000000;">height </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">will be set from the Edit1 height. Same goes for the Layout 3 height. Edit1 and Button1 </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-style: italic; color: #000000;">width</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> will be, however, determined from the layout width. It sounds complicated but really isn’t. Think about what happens in Delphi when you set the Align property. Some placement parameters are set automatically and other are left alone. [For the alTop layout, for example, Left, Top, and Width are set while Height isn’t.] The same placement parameters are set automatically in Smart while other (Height in the example of a Top alignment) are determined from the nested controls.</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">You can set layout width and height manually by providing a first parameter of Layout.Width or Layout.Height.</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">Resizing layouts</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">The code above only </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-style: italic; color: #000000;">defined</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> a layout, it didn’t </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-style: italic; color: #000000;">resize</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> it. To do that, we have to add one line to the overloaded Resize method.</span></p>
<p style="background: #ffff99;"><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #800000;">procedure</span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #ffffff;"> </span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">TForm1.Resize;</span></p>
<p style="background: #ffff99;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #800000;">begin</span></p>
<p style="background: #ffff99;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #ffffff;">  </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #800000;">inherited</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">;</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #ffffff;">  </span></p>
<p style="background: #ffff99;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> &nbsp;FLayout.Resize(Self);</span></p>
<p style="background: #ffff99;"><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #800000;">end</span><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">;</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">With that we are telling the layout manager that the outside container is the form itself (Self) and that the layout should please place itself into this form.</span></p>
<p style="margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">Example, revisited</span></p>
<p style="margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">I tried to document the layout we’re talking about in a graphical form. Maybe this will make the concepts easier to understand.</span></p>
<p><img src="hm_clip0011.png" width="494" height="704" border="0" alt="hm_clip0011"></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">Layout 1</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> is placed on a form. Distance between the Layout 1 and form borders is 3 pixels (set by the Margins parameter).</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">Layout 2 </span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">is placed at the top of the Layout 1. There’s actually no difference between Layout1.Top and Layout2.Top (same goes for .Left and .Width) – I just had to draw a little space between to separate the two visually. Edit2 has exactly the same .Width, .Height, .Left and .Top as Layout 2.</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Then there’s a Spacing (3) pixels empty space and Layout 3 / Button1 are laid out just like Layout 2 and Edit1.</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">Layout 3</span><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;"> is followed by another Spacing pixels of empty space and then Layout 4 takes all the space there was left. Memo1 is resized to take all the space inside Layout 3.</span></p>
<p style="margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; font-weight: bold; color: #000000;">Result</span></p>
<p style="text-align: justify; margin: 7px 0px 7px 0px;"><span style="font-size: 16px; font-family: 'Times New Roman'; color: #000000;">Viewed in Chrome, the form looks quite nice (as does in other browsers and on mobile devices).</span></p>
<p><img src="hm_clip0012.png" width="333" height="533" border="0" alt="hm_clip0012"></p>

</td></tr></table>

</body>
</html>
